scalar EmailAddress
scalar URL
scalar Upload
directive @auth on FIELD_DEFINITION | FIELD

type Query {
    getUsers: [User]!
    getSingleUser(id:ID!): User!
    me: User!@auth
}

type Mutation {
    createNewUser(data:UserInput!):User!@auth
    updateOneUser(id:ID!, data: UserInputUpdate): User!@auth
    deleteOneUser(id:ID!): String!@auth
    login(email:EmailAddress!, password: String!): Auth!
}

type Auth {
    token: String!
    message: String!
}

type User {
    _id: ID!
    nombre: String!
    apellido_paterno: String!
    apellido_materno: String!
    email: EmailAddress!
    telefono: String!
    birth_date: String!
    gender:GENDERS
    profile_pic:URL!
}

input UserInput{
    nombre:String!
    apellido_paterno:String!
    apellido_materno:String!
    email:EmailAddress
    telefono: String
    password:String
    birth_date:String
    gender:GENDERS
    profile_pic:URL
}

input UserInputUpdate{
    nombre:String
    apellido_paterno:String
    apellido_materno:String
    email:EmailAddress
    telefono: String
    password:String
    birth_date:String
    gender:GENDERS
    profile_pic:URL
    is_active: Boolean
}

enum GENDERS{
    M
    F
    O
}
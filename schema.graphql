scalar EmailAddress
scalar URL
scalar Upload
directive @auth on FIELD_DEFINITION | FIELD

type Query {
    getUsers: [User]!
    getSingleUser(id:ID!): User!
    me: User!@auth
    getClientes: [Cliente]!
    getSingleCliente(id:ID!): Cliente!
    getSearchCliente(nombre:String!): [Cliente]!
    getOperadores: [Operador]!
    getSingleOperador(id:ID!): Operador!
    getSearchOperador(nombre:String!): [Operador]!
    getLineaTransportes: [LineaTransporte]!
    getSingleLineaTransporte(id:ID!): LineaTransporte!
    getSearchLineaTransporte(nombre:String!): [LineaTransporte]!
    getEquipoGps: [EquipoGps]!
    getSingleEquipoGps(id:ID!): EquipoGps!
    getSearchEquipoGps(descripcion:String!): [EquipoGps]!
    getCamiones: [Camion]!
    getSingleCamion(id:ID!): Camion!
    getSearchCamion(descripcion:String!): [Camion]!
    getCajas: [Caja]!
    getSingleCaja(id:ID!): Caja!
    getSearchCaja(descripcion:String!): [Caja]!
    getStatusRuta: [StatusRuta]!
    getSingleStatusRuta(id:ID!): StatusRuta!
    getSearchStatusRuta(descripcion:String!): StatusRuta!
    getUbicaciones: [Ubicacion]!
    getSingleUbicacion(id:ID!): Ubicacion!
    getSearchUbicacion(nombre:String!): [Ubicacion]!
    getRutas: [Ruta]!
    getSingleRuta(id:ID!): Ruta!
    getSearchRuta(nombre:String!): [Ruta]!
    getSearchRutasByDates(begin:String!, end:String!): [Ruta]!
}

type Mutation {
    createNewUser(data:UserInput!):User!@auth
    updateOneUser(id:ID!, data: UserInputUpdate): User!@auth
    deleteOneUser(id:ID!): String!@auth
    login(email:EmailAddress!, password: String!): Auth!
    createNewCliente(data:ClienteInput!): Cliente!
    updateOneCliente(id:ID!, data: ClienteInputUpdate): Cliente!
    deleteOneCliente(id:ID!): String!
    createNewOperador(data:OperadorInput!): Operador!
    updateOneOperador(id:ID!, data: OperadorInputUpdate): Operador!
    deleteOneOperador(id:ID!): String!
    createNewLineaTransporte(data:LineaTransporteInput!): LineaTransporte!
    updateOneLineaTransporte(id:ID!, data: LineaTransporteInputUpdate): LineaTransporte!
    deleteOneLineaTransporte(id:ID!): String!
    createNewEquipoGps(data:EquipoGpsInput!): EquipoGps!
    updateOneEquipoGps(id:ID!, data: EquipoGpsInputUpdate): EquipoGps!
    deleteOneEquipoGps(id:ID!): String!
    createNewCamion(data:CamionInput!): Camion!
    updateOneCamion(id:ID!, data: CamionInputUpdate): Camion!
    deleteOneCamion(id:ID!): Camion!
    createNewCaja(data:CajaInput!): Caja!
    updateOneCaja(id:ID!, data: CajaInputUpdate): Caja!
    deleteOneCaja(id:ID!): Caja!
    createNewStatusRuta(data:StatusRutaInput!): StatusRuta!
    updateOneStatusRuta(id:ID!, data: StatusRutaInputUpdate): StatusRuta!
    deleteOneStatusRuta(id:ID!): StatusRuta!
    createNewUbicacion(data:UbicacionInput!): Ubicacion!
    updateOneUbicacion(id:ID!, data: UbicacionInputUpdate): Ubicacion!
    deleteOneUbicacion(id:ID!): Ubicacion!
    createNewRuta(data:RutaInput!): Ruta!
    updateOneRuta(id:ID!, data: RutaInputUpdate): Ruta!
    deleteOneRuta(id:ID!): Ruta!
}

type Auth {
    token: String!
    message: String!
}

type User {
    _id: ID!
    nombre: String!
    apellido_paterno: String!
    apellido_materno: String!
    email: EmailAddress!
    telefono: String!
    birth_date: String!
    gender:GENDERS
    profile_pic:URL!
}

input UserInput{
    nombre:String!
    apellido_paterno:String!
    apellido_materno:String!
    email:EmailAddress
    telefono: String
    password:String
    birth_date:String
    gender:GENDERS
    profile_pic:URL
}

input UserInputUpdate{
    nombre:String
    apellido_paterno:String
    apellido_materno:String
    email:EmailAddress
    telefono: String
    password:String
    birth_date:String
    gender:GENDERS
    profile_pic:URL
    is_active: Boolean
}

enum GENDERS{
    M
    F
    O
}

enum TIPOPERSONA{
    FISICA
    MORAL
    O
}

type Cliente {
    _id: ID!
    tipo_persona:TIPOPERSONA!
    nombre:String!
    rfc: String
    contacto:String!
    email: EmailAddress!
    telefono: String
    celular: String
    cp: String
    direccion: String
    profile_pic:URL!
    rutas: [Ruta]!
}

input ClienteInput {
    tipo_persona:TIPOPERSONA
    nombre: String!
    rfc: String
    contacto:String
    email: EmailAddress
    telefono: String
    celular: String
    cp: String
    direccion: String
    profile_pic:URL
}

input ClienteInputUpdate {
    tipo_persona:TIPOPERSONA
    nombre: String
    rfc: String
    contacto:String
    email: EmailAddress
    telefono: String
    celular: String
    cp: String
    direccion: String
    profile_pic:URL
    is_active: Boolean
}

type Operador {
    _id: ID!
    nombre: String!
    apellido_paterno: String!
    apellido_materno: String!
    email: EmailAddress!
    telefono: String!
    celular: String
    birth_date: String
    gender:GENDERS
    profile_pic:URL
}

input OperadorInput{
    nombre:String!
    apellido_paterno:String!
    apellido_materno:String!
    email:EmailAddress
    telefono: String
    celular: String
    birth_date:String
    gender:GENDERS
    profile_pic:URL
}

input OperadorInputUpdate{
    nombre:String
    apellido_paterno:String
    apellido_materno:String
    email:EmailAddress
    telefono: String
    celular: String
    birth_date:String
    gender:GENDERS
    profile_pic:URL
    is_active: Boolean
}

type LineaTransporte {
    _id: ID!
    nombre: String!
    contacto: String!
    email: EmailAddress!
    telefono: String!
    celular: String
    cp: String
    georeferenciax:String
    georeferenciay:String
    direccion:String
}

input LineaTransporteInput {
    nombre: String!
    contacto: String
    email: EmailAddress
    telefono: String
    celular: String
    cp: String
    georeferenciax:String
    georeferenciay:String
    direccion:String
}

input LineaTransporteInputUpdate {
    nombre: String
    contacto: String
    email: EmailAddress
    telefono: String
    celular: String
    cp: String
    georeferenciax:String
    georeferenciay:String
    direccion:String
    is_active: Boolean
}

type EquipoGps {
    _id: ID!
    descripcion: String!
    marca: String!
    modelo: String!
    identificador: String
}

input EquipoGpsInput {
    descripcion: String!
    marca: String
    modelo: String
    identificador: String
}

input EquipoGpsInputUpdate {
    descripcion: String
    marca: String
    modelo: String
    identificador: String
    is_active: Boolean
}

enum TIPOUNIDAD{
    TRAILER
    TORTON
    TRESCINCO
    UNOCINCO
    O
}

enum TIPOSERVICIO{
    EXPRESS
    NORMAL
    O
}

enum TIPOMONITOREO{
    DEDICADO
    CUSTODIA
    O
}

type Camion {
    _id: ID!
    descripcion: String!
    placas: String!
    modelo: String!
    color: String
    cuenta_espejo: String
    tipo_unidad: TIPOUNIDAD
}

input CamionInput {
    descripcion: String!
    placas: String
    modelo: String
    color: String
    cuenta_espejo: String
    tipo_unidad: TIPOUNIDAD
}

input CamionInputUpdate {
    descripcion: String
    placas: String
    modelo: String
    color: String
    cuenta_espejo: String
    tipo_unidad: TIPOUNIDAD
    is_active: Boolean
}

type Caja {
    _id: ID!
    descripcion: String!
    placas: String!
    placas_americanas: String
}

input CajaInput {
    descripcion: String!
    placas: String!
    placas_americanas: String
}

input CajaInputUpdate {
    descripcion: String
    placas: String
    placas_americanas: String
    is_active: Boolean
}

type StatusRuta {
    _id: ID!
    nombre: String!
    descripcion: String!
}

input StatusRutaInput {
    nombre: String!
    descripcion: String
}

input StatusRutaInputUpdate {
    nombre: String
    descripcion: String
    is_active: Boolean
}

type Ruta {
    _id: ID!
    folio: String
    cliente: Cliente
    origen: Ubicacion
    destino: Ubicacion
    fecha_salida: String
    fecha_cita: String
    linea_transporte: LineaTransporte
    operador: Operador
    camion: Camion
    caja: Caja
    equipo_gps: EquipoGps
    fecha_llegada: String
    numero_sello_caja: String
    tipo_servicio: TIPOSERVICIO
    tipo_monitoreo: TIPOMONITOREO
}

input RutaInput {
    folio: String
    cliente: ID!
    origen: ID
    destino: ID
    fecha_salida: String
    fecha_cita: String
    linea_transporte: ID
    operador: ID
    camion: ID
    caja: ID
    equipo_gps: ID
    fecha_llegada: String
    numero_sello_caja: String
    tipo_servicio: TIPOSERVICIO
    tipo_monitoreo: TIPOMONITOREO
}

input RutaInputUpdate {
    folio: String
    cliente: ID
    origen: ID
    destino: ID
    fecha_salida: String
    fecha_cita: String
    fecha_llegada: String
    linea_transporte: ID
    operador: ID
    camion: ID
    caja: ID
    equipo_gps: ID
    numero_sello_caja: String
    tipo_servicio: TIPOSERVICIO
    tipo_monitoreo: TIPOMONITOREO
}

type Perfil {
    _id: ID!
    nombre: String!
    descripcion: String!
}

input PerfilInput {
    nombre: String!
    descripcion: String
}

input PerfilInputUpdate {
    nombre: String
    descripcion: String
}

type Ubicacion {
    _id: ID!
    nombre: String!
    cp: String!
    calle: String
    numero_exterior: String
    numero_interior: String
    estado: String
    municipio: String
    pais: String
    georeferenciax: String
    georeferenciay: String
}

input UbicacionInput {
    nombre: String!
    cp: String!
    calle: String
    numero_exterior: String
    numero_interior: String
    estado: String
    municipio: String
    pais: String
    georeferenciax: String
    georeferenciay: String
}

input UbicacionInputUpdate {
    nombre: String!
    cp: String
    calle: String
    numero_exterior: String
    numero_interior: String
    estado: String
    municipio: String
    pais: String
    georeferenciax: String
    georeferenciay: String
}